{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "uniqueNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique name that will be used to generate various other names including the name of the Public IP used to access the Virtual Machine."
      }
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "maxLength": 11,
      "metadata": {
        "description": "Name prefix of the Storage Account"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "mySqlPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the MySQL admin user."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "virtualNetworkName": {
        "type": "string",
        "defaultValue": "myvnet",
        "metadata": {
            "description": "Virtual network name for the cluster"
        }
    },
    "vnetNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "allowedValues": [
            "new",
            "existing"
        ],
        "metadata": {
            "description": "Identifies whether to use new or existing Virtual Network"
        }
    },
    "virtualNetworkExistingRGName": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
            "description": "If using existing VNet, specifies the resource group for the existing VNet"
        }
    },
    "artifactsPath": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/gsamant/templates_multichain/master/lamp-app%20for%20php7",
            "metadata": {
                "description": "template and script file location",
                "artifactsBaseUrl": "Base URL of the Publisher Template gallery package"
            }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "16.04-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.2-LTS",
        "15.10",
        "16.04-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 12.04.5-LTS, 14.04.2-LTS, 15.10."
      }
    }
  },
  "variables": {
    "templateAPIVersion": "2015-01-01",
    "resourceAPIVersion": "2015-06-15",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "OSDiskName": "[concat(parameters('uniqueNamePrefix'),'Disk')]",
    "nicName": "[concat(parameters('uniqueNamePrefix'),'Nic')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat(parameters('uniqueNamePrefix'),'IP')]",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "vmSize": "Standard_A2",
    "vmName": "[concat(parameters('uniqueNamePrefix'),'VM')]",
    //"virtualNetworkName": "[concat(parameters('uniqueNamePrefix'),'VNet')]",
    //"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    //"subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "apiVersion": "2015-06-15",
    "virtualNetworkSetupURL": "[concat(parameters('artifactsPath'),'/vnet-',parameters('vnetNewOrExisting'),'.json')]"
   
  },
  "resources": [
    {
            "name": "SettingUpVirtualNetwork",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('templateAPIVersion')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('virtualNetworkSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "addressPrefix": {
                        "value": "[variables('addressPrefix')]"
                    },
                    "subnetName": {
                        "value": "[variables('subnetName')]"
                    },
                    "subnetPrefix": {
                        "value": "[variables('subnetPrefix')]"
                    },
                    "virtualNetworkExistingRGName": {
                        "value": "[parameters('virtualNetworkExistingRGName')]"
                    }
                }
            }
        },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountNamePrefix')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        //"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                  "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', variables('templateAPIVersion')).outputs.dbSubnetRef.value]"
               }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountNamePrefix'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountNamePrefix'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
              {
                "name": "datadisk1",
                "diskSizeGB": "1000",
                "lun": 0,
                "vhd": {
                  "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountNamePrefix')), variables('resourceAPIVersion')).primaryEndpoints.blob, 'vhds/', parameters('dnsLabelPrefix'), copyIndex(), 'dataDisk1.vhd')]"
                },
                "createOption": "Empty"
              }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/newuserscript')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/gsamant/templates_multichain/tree/master/lamp-app%20for%20php7/install_lamp.sh"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('sh install_lamp.sh ', parameters('mySqlPassword'))]"
        }
      }
    }
  ]
}
